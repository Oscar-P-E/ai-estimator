<?xml version="1.0" encoding="UTF-8"?>
<specification>
  <project>
    <name>AI Estimator SaaS Platform</name>
    <version>2.0</version>
    <description>A SaaS platform that provides embeddable AI-powered estimators for businesses, integrated into custom websites</description>
    <created_date>2025-06-21</created_date>
    <last_updated>2025-12-26</last_updated>
    <current_phase>Phase 0: Demo Ready (COMPLETED - Ready for customer demos!)</current_phase>
  </project>

  <current_state>
    <phase>Phase 0: Demo Ready (COMPLETED - Ready for customer demos!)</phase>
    <working_features>
      <feature>✅ Clerk authentication for business owners and users</feature>
      <feature>✅ Simplified file system - any Claude-readable format upload (.txt, .md, .csv, .json, .xml, .pdf, .docx, .xlsx, .py, .js, .ts, .html, .css, .png, .jpg, .gif, .webp)</feature>
      <feature>✅ Direct AI file interpretation - files stored as-is, Claude reads during chat</feature>
      <feature>✅ Enhanced file management - list, delete, file validation with UI</feature>
      <feature>✅ Claude AI integration with full conversation context persistence</feature>
      <feature>✅ Conversation persistence - maintains context across messages in same session</feature>
      <feature>✅ Deepgram STT integration</feature>
      <feature>✅ ElevenLabs TTS integration</feature>
      <feature>✅ Business-specific chat pages (/business/[business_id])</feature>
      <feature>✅ Enhanced dashboard for business file management</feature>
      <feature>✅ Animated voice input visualization</feature>
      <feature>✅ Complete voice conversation loop (STT → AI → TTS)</feature>
      <feature>✅ Business file isolation - users only access their own files (using secure unique business IDs)</feature>
      <feature>✅ UI/UX improvements completed - professional demo-ready appearance with all enhancements</feature>
      <feature>✅ Clean build and deployment ready</feature>
    </working_features>
    
    <resolved_issues>
      <issue>✅ Business file isolation implemented (using Clerk user ID as business ID for Phase 0)</issue>
      <issue>✅ Simplified file system with direct Claude interpretation</issue>
      <issue>✅ Conversation context persistence across messages</issue>
      <issue>✅ Enhanced file management UI with delete functionality</issue>
    </resolved_issues>
    
    <remaining_issues>
      <issue priority="high">No embeddable API/widget system for external websites (Phase 1)</issue>
      <issue priority="high">No proper business entity model with database (Phase 1)</issue>
      <issue priority="medium">No quote persistence for logged-in users (Phase 1)</issue>
      <issue priority="low">Custom domain/slug management missing (Phase 1)</issue>
    </remaining_issues>
  </current_state>

  <architecture>
    <overview>
      <description>Multi-tenant SaaS platform with embeddable widgets for custom business websites</description>
      <deployment_model>Single Next.js application serving multiple tenants</deployment_model>
    </overview>

    <ai_context_system>
      <description>Simplified file-based AI context system where files are stored raw and read directly by Claude during conversations</description>
      <file_storage>
        <structure>business_files/{business_id}/{filename}</structure>
        <supported_formats>Any text-readable format: .txt, .md, .csv, .json, .xml, .pdf, .docx, .xlsx, .py, .js, .ts, .html, .css, images (.png, .jpg, .gif, .webp)</supported_formats>
        <processing>None - files stored as-is, Claude reads/interprets them directly during chat</processing>
      </file_storage>
      <quote_persistence>
        <structure>user_quotes/{business_id}/{user_id}/{session_id}_{timestamp}.xml</structure>
        <triggers>When logged-in user receives quote from AI</triggers>
        <content>Full conversation context + generated quote</content>
        <status>Deferred to Phase 1 for demo simplicity</status>
      </quote_persistence>
      <context_loading>
        <method>All business files loaded as context for each AI request</method>
        <isolation>Users only access files for their business context (secure unique business IDs mapped to Clerk user IDs)</isolation>
      </context_loading>
      <currency_handling>
        <default_currency>AUD (Australian Dollars)</default_currency>
        <detection_method>AI analyzes business documents for currency context and explicit declarations</detection_method>
        <ambiguity_resolution>Businesses advised to include explicit currency statements like "prices in USD" in their documents</ambiguity_resolution>
        <priority_order>
          <priority>1. Explicit currency declarations in documents</priority>
          <priority>2. Currency context clues from document content</priority>
          <priority>3. Default to AUD if no clear indication</priority>
        </priority_order>
      </currency_handling>
      <security_architecture>
        <business_id_system>
          <description>Secure unique business ID generation system that maps to Clerk user IDs</description>
          <id_format>biz_{timestamp}_{random_hex}</id_format>
          <mapping_storage>business_files/business-id-mapping.json</mapping_storage>
          <benefits>
            <benefit>No exposure of Clerk user IDs in URLs or client-side code</benefit>
            <benefit>URL-friendly business identifiers</benefit>
            <benefit>Maintains security while providing clean public interfaces</benefit>
          </benefits>
        </business_id_system>
      </security_architecture>
    </ai_context_system>

    <data_models>
      <model name="Business">
        <fields>
          <field name="id" type="uuid" primary_key="true"/>
          <field name="name" type="string" required="true"/>
          <field name="slug" type="string" unique="true" required="true"/>
          <field name="domain" type="string" optional="true"/>
          <field name="owner_user_id" type="string" required="true"/>
          <field name="api_key" type="string" unique="true" required="true"/>
          <field name="settings" type="json" default="{}"/>
          <field name="created_at" type="timestamp"/>
          <field name="updated_at" type="timestamp"/>
        </fields>
      </model>

      <model name="BusinessFile">
        <fields>
          <field name="id" type="uuid" primary_key="true"/>
          <field name="business_id" type="uuid" foreign_key="Business.id"/>
          <field name="filename" type="string" required="true"/>
          <field name="file_path" type="string" required="true"/>
          <field name="file_type" type="string" required="true"/>
          <field name="file_size" type="integer"/>
          <field name="upload_status" type="enum" values="uploaded,error"/>
          <field name="created_at" type="timestamp"/>
        </fields>
      </model>

      <model name="UserQuote">
        <fields>
          <field name="id" type="uuid" primary_key="true"/>
          <field name="business_id" type="uuid" foreign_key="Business.id"/>
          <field name="user_id" type="string" required="true"/>
          <field name="session_id" type="string" required="true"/>
          <field name="quote_content" type="text" required="true"/>
          <field name="conversation_context" type="json"/>
          <field name="file_path" type="string" required="true"/>
          <field name="created_at" type="timestamp"/>
          <field name="updated_at" type="timestamp"/>
        </fields>
      </model>

      <model name="ChatSession">
        <fields>
          <field name="id" type="uuid" primary_key="true"/>
          <field name="business_id" type="uuid" foreign_key="Business.id"/>
          <field name="session_token" type="string" unique="true"/>
          <field name="customer_info" type="json" optional="true"/>
          <field name="created_at" type="timestamp"/>
          <field name="last_activity" type="timestamp"/>
        </fields>
      </model>

      <model name="ChatMessage">
        <fields>
          <field name="id" type="uuid" primary_key="true"/>
          <field name="session_id" type="uuid" foreign_key="ChatSession.id"/>
          <field name="role" type="enum" values="user,assistant"/>
          <field name="content" type="text" required="true"/>
          <field name="metadata" type="json" default="{}"/>
          <field name="created_at" type="timestamp"/>
        </fields>
      </model>
    </data_models>

    <api_design>
      <rest_apis>
        <endpoint path="/api/v1/businesses/{businessId}/chat" method="POST">
          <description>Public endpoint for customer chat interactions</description>
          <authentication>API key or session token</authentication>
          <request>
            <field name="message" type="string" required="true"/>
            <field name="session_token" type="string" optional="true"/>
            <field name="audio_data" type="base64" optional="true"/>
          </request>
          <response>
            <field name="response" type="string"/>
            <field name="session_token" type="string"/>
            <field name="audio_response" type="base64" optional="true"/>
          </response>
        </endpoint>

        <endpoint path="/api/v1/businesses/{businessId}/documents" method="POST">
          <description>Upload pricing documents</description>
          <authentication>Business owner authentication</authentication>
          <request_type>multipart/form-data</request_type>
        </endpoint>

        <endpoint path="/api/v1/embed/widget.js" method="GET">
          <description>Embeddable JavaScript widget</description>
          <query_params>
            <param name="business_id" required="true"/>
            <param name="theme" optional="true"/>
            <param name="position" optional="true"/>
          </query_params>
        </endpoint>
      </rest_apis>

      <widget_system>
        <embed_code>
          <![CDATA[
          <script src="https://estimator.yourdomain.com/api/v1/embed/widget.js?business_id=YOUR_BUSINESS_ID"></script>
          <div id="ai-estimator-widget"></div>
          ]]>
        </embed_code>
        <features>
          <feature>Responsive design</feature>
          <feature>Customizable theming</feature>
          <feature>Modal or inline positioning</feature>
          <feature>Voice and text input</feature>
          <feature>Cross-origin support</feature>
        </features>
      </widget_system>
    </api_design>
  </architecture>

  <features>
    <feature name="Simplified AI Context System">
      <status>✅ COMPLETED in Phase 0</status>
      <description>Direct AI interpretation of business files without pre-processing or schema extraction</description>
      <implementation>
        <step>✅ Remove complex document processing logic</step>
        <step>✅ Implement direct file reading for AI context</step>
        <step>✅ Add business file isolation and security</step>
        <step>✅ Support multiple file formats (all Claude-readable types)</step>
        <step>✅ Enhanced file management UI with delete functionality</step>
        <step>✅ Conversation context persistence</step>
      </implementation>
    </feature>

    <feature name="Quote Persistence System">
      <description>Save and retrieve quotes for logged-in users across sessions</description>
      <implementation>
        <step>Create XML-based quote storage system</step>
        <step>Implement user session management</step>
        <step>Add quote retrieval and history functionality</step>
        <step>Enable business access to customer quotes</step>
      </implementation>
    </feature>

    <feature name="Text-to-Speech Integration">
      <description>Complete the voice interaction loop with TTS responses</description>
      <implementation>
        <step>Integrate ElevenLabs or similar TTS service</step>
        <step>Add voice response settings per business</step>
        <step>Implement audio streaming for real-time responses</step>
      </implementation>
    </feature>

    <feature name="Business Onboarding Flow">
      <description>Streamlined setup process for new businesses</description>
      <implementation>
        <step>Create business registration form</step>
        <step>Generate unique slug and API key</step>
        <step>Document upload wizard</step>
        <step>Widget configuration interface</step>
        <step>Testing and deployment tools</step>
      </implementation>
    </feature>

    <feature name="Analytics Dashboard">
      <description>Insights for business owners on customer interactions</description>
      <implementation>
        <step>Chat session tracking</step>
        <step>Quote generation metrics</step>
        <step>Popular service/product analysis</step>
        <step>Customer interaction patterns</step>
      </implementation>
    </feature>

    <feature name="Embeddable Widget System">
      <description>JavaScript widget for easy integration into client websites</description>
      <implementation>
        <step>Create iframe-based widget architecture</step>
        <step>Implement PostMessage communication</step>
        <step>Add theming and customization options</step>
        <step>Ensure mobile responsiveness</step>
        <step>Add position controls (modal, sidebar, inline)</step>
      </implementation>
    </feature>
  </features>

  <technical_requirements>
    <database>
      <type>PostgreSQL</type>
      <orm>Prisma</orm>
      <migrations>Required for schema changes</migrations>
    </database>

    <file_storage>
      <service>Local file system (Vercel deployment) or AWS S3</service>
      <purpose>Business documents, user quotes (XML), and audio files</purpose>
      <structure>
        <business_files>business_files/{business_id}/{filename}</business_files>
        <user_quotes>user_quotes/{business_id}/{user_id}/{session_id}_{timestamp}.xml</user_quotes>
      </structure>
    </file_storage>

    <ai_services>
      <llm>Claude 3.5 Sonnet (Anthropic)</llm>
      <stt>Deepgram</stt>
      <tts>ElevenLabs or Azure Cognitive Services</tts>
      <document_analysis>Claude with vision capabilities</document_analysis>
    </ai_services>

    <authentication>
      <business_owners>Clerk (existing)</business_owners>
      <api_access>API keys and session tokens</api_access>
      <customers>Anonymous with optional contact info</customers>
    </authentication>
  </technical_requirements>

  <implementation_phases>
    <phase number="0" name="Demo Deployment" priority="IN_PROGRESS">
      <description>Quick demo polish with simplified file system - get a reliable demo ready for customer presentations</description>
      <tasks>
        <task status="COMPLETED">✅ Integrate TTS service (ElevenLabs) for voice responses</task>
        <task status="COMPLETED">✅ Deploy to Vercel with environment variables</task>
        <task status="COMPLETED">✅ Remove complex document processing logic</task>
        <task status="COMPLETED">✅ Implement simple file storage (store files as-is)</task>
        <task status="COMPLETED">✅ Update chat API to load all business files as Claude context</task>
        <task status="COMPLETED">✅ Add basic file management (list, delete files)</task>
        <task status="IN_PROGRESS">🔄 Polish UI/UX for demo presentation (ongoing improvements)</task>
        <task status="COMPLETED">✅ Add basic business file isolation</task>
        <task status="COMPLETED">✅ Test end-to-end functionality with simplified system</task>
        <task status="COMPLETED">✅ Create demo script and test scenarios</task>
      </tasks>
      <estimated_time>3-4 days</estimated_time>
      <progress>
        <completed_tasks>8/10</completed_tasks>
        <completion_percentage>80%</completion_percentage>
        <last_update>2025-06-26</last_update>
        <notes>
          - ✅ ElevenLabs TTS integration completed with full voice conversation loop
          - ✅ STT (Deepgram) working perfectly with high accuracy transcription  
          - ✅ Voice UX improvements: auto-send after recording, proper microphone management
          - ✅ End-to-end voice testing successful: speak → transcribe → AI response → TTS playback
          - ✅ Vercel deployment completed with all environment variables configured
          - ✅ Simplified file system implemented with direct Claude interpretation
          - ✅ Complex document processing removed, replaced with direct file reading
          - ✅ Conversation persistence fixed - maintains context across messages
          - ✅ Enhanced file management UI with delete functionality
          - ✅ Business file isolation implemented using Clerk user ID
          - ✅ All Claude-readable formats supported (.txt, .md, .csv, .json, .xml, .pdf, .docx, .xlsx, .py, .js, .ts, .html, .css, images)
          - 🔄 UI/UX polish required - functionality complete, but design improvements needed for demo readiness
          - 📋 Quote persistence deferred to Phase 1 for demo simplicity
        </notes>
      </progress>
      <success_criteria>
        <criterion status="COMPLETED">✅ Site is accessible online with reliable hosting</criterion>
        <criterion status="COMPLETED">✅ Public users can chat via text and voice</criterion>
        <criterion status="COMPLETED">✅ AI responds with voice when user used voice input</criterion>
        <criterion status="COMPLETED">✅ Admin can upload files (any Claude-readable format) and AI uses them as context</criterion>
        <criterion status="COMPLETED">✅ Simple file management (list, delete) for business owners</criterion>
        <criterion status="COMPLETED">✅ Basic business file isolation (using Clerk user ID)</criterion>
        <criterion status="PENDING">⏳ Polished UI/UX suitable for customer demos (required for demo readiness)</criterion>
        <criterion status="DEFERRED">📋 Quote persistence (moved to Phase 1)</criterion>
      </success_criteria>
    </phase>

    <phase number="1" name="Enhanced Demo Features" priority="HIGH">
      <description>Add missing features for a complete demo based on user feedback</description>
      <tasks>
        <task>Implement quote persistence system for logged-in users</task>
        <task>Add quote history and retrieval functionality</task>
        <task>Improve file management interface</task>
        <task>Add error handling and user feedback improvements</task>
        <task>Implement session management for quote tracking</task>
      </tasks>
      <estimated_time>1-2 weeks</estimated_time>
    </phase>

    <phase number="2" name="Multi-Business Support" priority="HIGH">
      <description>Add proper multi-tenant capabilities while keeping current simple deployment</description>
      <tasks>
        <task>Set up PostgreSQL database (local file system backup)</task>
        <task>Create Business and PricingDocument models</task>
        <task>Implement proper business isolation</task>
        <task>Add business registration and management</task>
        <task>Migrate existing file-based system to database</task>
      </tasks>
      <estimated_time>2-3 weeks</estimated_time>
    </phase>

    <phase number="3" name="Embeddable Widget System" priority="MEDIUM">
      <description>Core SaaS feature - embeddable widgets for client websites</description>
      <tasks>
        <task>Create embeddable JavaScript widget</task>
        <task>Implement iframe-based architecture</task>
        <task>Add theming and customization options</task>
        <task>Ensure cross-origin compatibility</task>
        <task>Test across multiple website environments</task>
      </tasks>
      <estimated_time>3-4 weeks</estimated_time>
    </phase>

    <phase number="4" name="API System" priority="MEDIUM">
      <description>REST APIs for programmatic access and widget communication</description>
      <tasks>
        <task>Design and implement REST APIs</task>
        <task>Add API authentication and rate limiting</task>
        <task>Create API documentation</task>
        <task>Implement session management</task>
        <task>Add webhook support for integrations</task>
      </tasks>
      <estimated_time>2-3 weeks</estimated_time>
    </phase>

    <phase number="5" name="Business Management & Analytics" priority="LOW">
      <description>Advanced features for business owners</description>
      <tasks>
        <task>Build comprehensive analytics dashboard</task>
        <task>Add advanced business settings</task>
        <task>Implement custom domain support</task>
        <task>Create business onboarding flow</task>
        <task>Add billing and subscription management</task>
      </tasks>
      <estimated_time>3-4 weeks</estimated_time>
    </phase>

    <phase number="6" name="Scale & Polish" priority="LOW">
      <description>Production-ready improvements and scaling</description>
      <tasks>
        <task>Implement comprehensive monitoring</task>
        <task>Add performance optimizations</task>
        <task>Create automated testing suite</task>
        <task>Implement advanced caching strategies</task>
        <task>Add enterprise features (SSO, advanced analytics)</task>
      </tasks>
      <estimated_time>3-4 weeks</estimated_time>
    </phase>
  </implementation_phases>

  <testing_strategy>
    <unit_tests>All business logic and API endpoints</unit_tests>
    <integration_tests>Database operations and external service calls</integration_tests>
    <e2e_tests>Complete user workflows for both business owners and customers</e2e_tests>
    <widget_tests>Cross-browser and cross-domain compatibility</widget_tests>
  </testing_strategy>

  <deployment_considerations>
    <hosting>Vercel or AWS with CDN for widget delivery</hosting>
    <environment_variables>Secure management of API keys and secrets</environment_variables>
    <monitoring>Application performance and error tracking</monitoring>
    <scaling>Database connection pooling and API rate limiting</scaling>
  </deployment_considerations>

  <success_metrics>
    <metric>Number of businesses onboarded</metric>
    <metric>Widget embedding rate</metric>
    <metric>Customer interaction volume</metric>
    <metric>Quote generation accuracy</metric>
    <metric>Customer satisfaction scores</metric>
  </success_metrics>
</specification> 